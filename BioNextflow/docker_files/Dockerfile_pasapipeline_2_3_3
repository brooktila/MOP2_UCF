FROM continuumio/miniconda3:4.5.11 as blatbin

ARG BLAT_VERSION=36

# https://bioconda.github.io/recipes/blat/README.html
RUN conda install -c bioconda blat=${BLAT_VERSION}

FROM ubuntu:18.04

# Adapted from https://github.com/PASApipeline/PASApipeline
MAINTAINER bhaas@broadinstitute.org
MAINTAINER toni.hermoso@crg.eu

RUN apt-get update && apt-get install -y gcc g++ perl python automake make \
                                       wget git curl libdb-dev \
                                       zlib1g-dev bzip2 libncurses5-dev \
                                       texlive-latex-base \
                                       default-jre \
                                       python-pip python-dev \
                                       gfortran \
                                       build-essential libghc-zlib-dev libncurses-dev libbz2-dev liblzma-dev libpcre3-dev libxml2-dev \
                                       libblas-dev gfortran git unzip ftp libzmq3-dev nano ftp fort77 libreadline-dev \
                                       libcurl4-openssl-dev libx11-dev libxt-dev \
                                       x11-common libcairo2-dev libpng-dev libreadline6-dev libjpeg8-dev pkg-config libtbb-dev \
                   && apt-get clean

RUN curl -L https://cpanmin.us | perl - App::cpanminus

RUN cpanm install DB_File

RUN cpanm install URI::Escape


## set up tool config and deployment area:

ENV SRC /usr/local/src
ENV BIN /usr/local/bin

RUN apt-get install -y sqlite lighttpd libgd-tools libgd-dev mysql-client default-libmysqlclient-dev

RUN cpanm install GD
RUN cpanm install DBI
RUN cpanm install DBD::SQLite
RUN cpanm install DBD::mysql

# Install R as well
RUN export DEBIAN_FRONTEND=noninteractive && apt-get install -y r-base

## GMAP installation
WORKDIR $SRC
ENV GSNAP_VER 2017-11-15

RUN wget http://research-pub.gene.com/gmap/src/gmap-gsnap-${GSNAP_VER}.tar.gz && \
        tar xvf gmap-gsnap-${GSNAP_VER}.tar.gz && \
        cd gmap-${GSNAP_VER} && \
        ./configure && \
        make && \
        make install

## BLAT
WORKDIR $BIN
COPY --from=blatbin /opt/conda/bin/blat .
#RUN wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat
#COPY exec/blat .
RUN chmod 755 ./blat


## Fasta3
WORKDIR $SRC
ENV FASTA_VER 36.3.8h

RUN wget http://faculty.virginia.edu/wrpearson/fasta/fasta36/fasta-${FASTA_VER}.tar.gz && \
        tar zxvf fasta-${FASTA_VER}.tar.gz && \
        cd ./fasta-${FASTA_VER}/src && \
        make -f ../make/Makefile.linux_sse2 all && \
        cp ../bin/fasta36 /usr/local/bin/fasta


## Samtools
WORKDIR $SRC

ENV SAMTOOLS_VER=1.9

RUN wget -q https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VER}/samtools-${SAMTOOLS_VER}.tar.bz2 && \
	tar jxf samtools-${SAMTOOLS_VER}.tar.bz2 && \
	cd samtools-${SAMTOOLS_VER} && \
	make prefix=/usr/local/src/samtools install && \
	cd /usr/local/bin && ln -s /usr/local/src/samtools/bin/* .

## PASA installation
WORKDIR $SRC

ENV PASA_CO pasa-v2.3.3

RUN git clone https://github.com/PASApipeline/PASApipeline.git && \
    cd PASApipeline && \
    git checkout $PASA_CO && \
    git submodule init && git submodule update && \
    make

ENV PASAHOME /usr/local/src/PASApipeline

RUN apt-get install -y r-cran-rcpp libssl-dev libxml2 libxml2-dev r-cran-ggplot2
RUN Rscript -e 'source("https://bioconductor.org/biocLite.R"); biocLite("seqLogo")'

# Clean cache
RUN apt-get clean
RUN set -x; rm -rf /var/lib/apt/lists/
